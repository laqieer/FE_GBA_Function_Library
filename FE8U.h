/*
   This file has been generated by IDA.
   It contains local type definitions from
   the type library 'FE8U-ida60'
*/

#pragma once

#define __int8 char
#define __int16 short
#define __int32 int
#define __int64 long long

/* 1 */
#pragma pack(push, 1)
struct ROMItemEntry
{
  __int16 nameId;
  __int16 descId;
  __int16 useDescId;
  char id;
  char weaponType;
  int attributes;
  int pStatBonuses;
  int pEffectiveness;
  char maxUses;
  char might;
  char hit;
  char weight;
  char crit;
  char range;
  __int16 costPerUse;
  char weaponRank;
  char iconId;
  char useEffect;
  char weaponEffect;
  char weaponExp;
  char u21;
  char u22;
  char u23;
};
#pragma pack(pop)

/* 2 */
enum Item
{
  ItemLightBrand = 0x10,
  ItemRuneSword = 0x11,
  ItemHandAxe = 0x28,
  ItemTomahawk = 0x29,
  ItemHatchet = 0x2C,
  ItemChestKey = 0x69,
  ItemDoorKey = 0x6A,
  ItemLockpick = 0x6B,
  ItemMemberCard = 0x72,
  Item5ChestKey = 0x79,
  ItemFillasMight = 0x7D,
  ItemSetsLitany = 0x80,
  ItemWindSword = 0xA1,
  ItemNightmare = 0xA6,
  ItemStone = 0xB5,
};

/* 3 */
#pragma pack(push, 1)
struct BattleStatsStruct
{
  __int16 updateFlags;
  __int16 attackRange;
  __int16 damage;
  __int16 attack;
  __int16 defense;
  __int16 hit;
  __int16 crit;
  __int16 lethalityChance;
  int pExtraUnit1;
  int pExtraUnit2;
};
#pragma pack(pop)

/* 4 */
#pragma pack(push, 1)
struct TrapStruct
{
  char xPos;
  char yPos;
  char type;
  char ext1;
  char ext2;
  char ext3;
  char ext4;
  char ext5;
};
#pragma pack(pop)

/* 5 */
#pragma pack(push, 1)
struct UnitStruct
{
  int pCharData;
  int pClassData;
  char level;
  char exp;
  char u0A_aiextdata;
  char index;
  int state;
  char xPos;
  char yPos;
  char maxHP;
  char curHP;
  char pow;
  char skl;
  char spd;
  char def;
  char res;
  char lck;
  char conBonus;
  char rescueAll;
  char ballistaIndex;
  char movBonus;
  __int16 item1;
  __int16 item2;
  __int16 item3;
  __int16 item4;
  __int16 item5;
  char swordRank;
  char lanceRank;
  char axeRank;
  char bowRank;
  char staffRank;
  char animaRank;
  char lightRank;
  char darkRank;
  char status;
  char torchBarrierDuration;
  char support1;
  char support2;
  char support3;
  char support4;
  char support5;
  char support6;
  char unitLeader;
  char supportBits;
  char u3A;
  char u3B;
  int pStandingSpriteData;
  __int16 ai3And4;
  char ai1;
  char ai1cursor;
  char ai2;
  char ai2cursor;
  char u46_allycountin1to8range;
  char u47;
};
#pragma pack(pop)

/* 6 */
enum Class
{
  ClassGorgonEgg = 0x34,
  ClassNecromancer = 0x4F,
  ClassPhantom = 0x51,
  ClassGorgonEgg2 = 0x62,
  ClassDemonKing = 0x66,
};

/* 7 */
#pragma pack(push, 1)
struct ChapterDataStruct
{
  int savedGlobalTimer;
  int startGlobalTimer;
  int goldAmount;
  char savedSaveLocation;
  char visionRange;
  char chapterId;
  char phase;
  __int16 turnNumber;
  char curX;
  char curY;
  char chapterState;
  char weather;
  __int16 supportGainCount;
  char u18;
  char u19;
  char u1A;
  char mode;
  char field_1C;
  char field_1D;
  char field_1E;
  char field_1F;
  int sTacticianName;
  char field_24;
  char field_25;
  char field_26;
  char field_27;
  char field_28;
  char field_29;
  char field_2A;
  char field_2B;
  char field_2C;
  char field_2D;
  char field_2E;
  char field_2F;
  char field_30;
  char field_31;
  char field_32;
  char field_33;
  char field_34;
  char field_35;
  char field_36;
  char field_37;
  char field_38;
  char field_39;
  char field_3A;
  char field_3B;
  char field_3C;
  char field_3D;
  char field_3E;
  char field_3F;
  char option1;
  char option2;
  __int16 option3;
  char field_44;
  char field_45;
  char field_46;
  char field_47;
  __int16 field_48;
  char somethingRelatedToSelectEvents;
  char somethingRelatedToSelectEvents2;
};
#pragma pack(pop)

/* 8 */
#pragma pack(push, 1)
struct UnitWordStruct
{
  char charId;
  char xPos;
  char yPos;
  char u03;
};
#pragma pack(pop)

/* 9 */
#pragma pack(push, 1)
struct ROMUnitEntry
{
  __int16 nameId;
  __int16 descId;
  char number;
  char class;
  __int16 portraitId;
  char miniPortrait;
  char affinity;
  char u0A;
  char baseLevel;
  char baseHP;
  char basePow;
  char baseSkl;
  char baseSpd;
  char baseDef;
  char baseRes;
  char baseLck;
  char baseCon;
  char rank1;
  char rank2;
  char rank3;
  char rank4;
  char rank5;
  char rank6;
  char rank7;
  char rank8;
  char growthHP;
  char growthPow;
  char growthSkl;
  char growthSpd;
  char growthDef;
  char growthRes;
  char growthLck;
  char u23;
  char u24;
  char u25;
  char u26;
  char u27;
  int attributes;
  int supportDataPtr;
  int uPtr30;
};
#pragma pack(pop)

/* 10 */
#pragma pack(push, 1)
struct ROMClassEntry
{
  __int16 nameId;
  __int16 descId;
  char number;
  char promotion;
  char standingMapSpriteId;
  char slowWalking;
  __int16 defaultPortrait;
  char u0A;
  char baseHP;
  char basePow;
  char baseSkl;
  char baseSpd;
  char baseDef;
  char baseRes;
  char baseCon;
  char baseMov;
  char maxHP;
  char maxPow;
  char maxSkl;
  char maxSpd;
  char maxDef;
  char maxRes;
  char maxCon;
  char classRelativePower;
  char growthHP;
  char growthPow;
  char growthSkl;
  char growthSpd;
  char growthDef;
  char growthRes;
  char growthLck;
  char promotionHP;
  char promotionPow;
  char promotionSkl;
  char promotionSpd;
  char promotionDef;
  char promotionRes;
  int attributes;
  char rank1;
  char rank2;
  char rank3;
  char rank4;
  char rank5;
  char rank6;
  char rank7;
  char rank8;
  int battleAnimPtr;
  int movCostPtr;
  int movCostRainPtr;
  int movCostSnowPtr;
  int terrainDefBonusPtr;
  int terrainAvoBonusPtr;
  int terrainResBonusPtr;
  int uPtr50;
};
#pragma pack(pop)

/* 11 */
enum Unit
{
  UnitLyonCh17 = 0x40,
  UnitLyonFinal = 0x6C,
  UnitFormortiis = 0xBE,
  UnitWall = 0xFE,
  UnitSnag = 0xFF,
};

/* 12 */
enum FlagsCAttr
{
  CAttrNone = 0x0,
  CAttrMountedAid = 0x1,
  CAttrCanto = 0x2,
  CAttrSteal = 0x4,
  CAttrLockpick = 0x8,
  CAttrDance = 0x10,
  CAttrPlay = 0x20,
  CAttrCritBonus = 0x40,
  CAttrBallista = 0x80,
  CAttrPromoted = 0x100,
  CAttrSupply = 0x200,
  CAttrMounted = 0x400,
  CAttrWyvern = 0x800,
  CAttrPegasus = 0x1000,
  CAttrLord = 0x2000,
  CAttrFemale = 0x4000,
  CAttrBoss = 0x8000,
  CAttrLock1 = 0x10000,
  CAttrLock2 = 0x20000,
  CAttrLock3 = 0x40000,
  CAttrMaxLevel10 = 0x80000,
};

/* 13 */
enum FlagsIAttr
{
  IAttrNone = 0x0,
  IAttrWeapon = 0x1,
  IAttrMagic = 0x2,
  IAttrStaff = 0x4,
  IAttrUnbreakable = 0x8,
  IAttrUnsellable = 0x10,
  IAttrBrave = 0x20,
  IAttrMagicDamage = 0x40,
};

/* 14 */
#pragma pack(push, 1)
struct BattleUnitStruct
{
  UnitStruct unit;
  __int16 weaponAfter;
  __int16 weaponBefore;
  int weaponAttributes;
  char weaponType;
  char weaponSlot;
  char u52;
  char WTHitBonus;
  char WTDmgBonus;
  char terrainId;
  char terrainDef;
  char terrainAvo;
  char terrainRes;
  char u59;
  __int16 attack;
  __int16 defense;
  __int16 attackSpeed;
  __int16 hit;
  __int16 avoid;
  __int16 battleHit;
  __int16 crit;
  __int16 dodge;
  __int16 battleCrit;
  __int16 lethalityChance;
  char expGained;
  char outStatus;
  char prevLevel;
  char prevExp;
  char prevHP;
  char hpUp;
  char powUp;
  char sklUp;
  char spdUp;
  char defUp;
  char resUp;
  char lckUp;
  char conUp;
  char wexpGain;
  char nonZeroDmg;
  char wpnBroke;
  char u7E;
  char u7F;
};
#pragma pack(pop)

/* 15 */
#pragma pack(push, 1)
struct ActionStruct
{
  __int16 currentRN;
  __int16 currentRN2;
  __int16 currentRN3;
  __int16 pushedRN;
  __int16 pushedRN2;
  __int16 pushedRN3;
  char unitIndex;
  char targetIndex;
  char xMove;
  char yMove;
  char moveCount;
  char actionId;
  char itemSlotIndex;
  char xPos2;
  char yPos2;
  char someTrapType;
  char field_16;
  char field_17;
  int SomeBattleRound;
  int field_1C;
  int field_20;
  int field_24;
  char field_28;
  char field_29;
  char field_2A;
  char field_2B;
  char field_2C;
  char field_2D;
  char field_2E;
  char field_2F;
  char field_30;
  char field_31;
  char field_32;
  char field_33;
  char field_34;
  char field_35;
  char field_36;
  char field_37;
};
#pragma pack(pop)

/* 16 */
#pragma pack(push, 1)
struct EventDataPtr
{
  int pTurnEvents;
  int pCharEvents;
  int pLocaEvents;
  int pActionEvents;
  int u10;
  int u14;
  int u18;
  int u1C_SelectEvents;
  int ballistae1;
  int ballistae2;
  int pAllyUnitsNormal;
  int pAllyUnitsHard;
  int field_30;
  int field_34;
  int field_38;
  int field_3C;
  int field_40;
  int field_44;
  int pStartScene;
  int pEndScene;
};
#pragma pack(pop)

/* 17 */
#pragma pack(push, 1)
struct WMLocationStruct
{
  char flags1;
  char flags2;
  __int16 mapIcon;
  char chId_Eirika;
  char chId_Ephraim;
  __int16 altEvId;
  char nextLocUnset_Eirika;
  char nextLocUnset_Ephraim;
  char nextLocSet_Eirika;
  char nextLocSet_Ephraim;
  int pArmory;
  int pShop;
  int pSecretShop;
  __int16 xCoord;
  __int16 yCoord;
  __int16 text;
  __int16 shipTravel;
};
#pragma pack(pop)

/* 18 */
#pragma pack(push, 1)
struct ArenaStruct
{
  int playerUnitPtr;
  int opponentUnitPtr;
  char field_8;
  char field_9;
  char field_A;
  char field_B;
  char range;
  char playerWType;
  char opponentWType;
  char playerClass;
  char opponentClass;
  char playerLevel;
  char opponentLevel;
  char playerMagicDamage;
  char opponentMagicDamage;
  char pad15;
  __int16 playerPowWeight;
  __int16 opponentPowWeight;
  __int16 playerWeapon;
  __int16 opponentWeapon;
  __int16 field_1E;
};
#pragma pack(pop)

/* 19 */
#pragma pack(push, 1)
struct PrepListItemStruct
{
  char charId;
  char itemSlot;
  __int16 item;
};
#pragma pack(pop)

/* 20 */
enum HardcodedTextId
{
  HammerneUseHelpText = 0x878,
};

/* 21 */
#pragma pack(push, 1)
struct Header6C
{
  int EntryPoint;
  int NextCall;
  int Destructor;
  int Callback;
  int NamePtr;
  int Parent6C;
  int FirstChild6C;
  int Prev6C;
  int Next6C;
  __int16 SleepTimer;
  char Mark;
  char SomeBitfieldMaybe;
  char ExecBlockCounter;
};
#pragma pack(pop)

/* 22 */
enum Construct6CCodes
{
  _END = 0x0,
  _SET_NAME = 0x1,
  _CALL = 0x2,
  _LOOP = 0x3,
  _SET_ON_END = 0x4,
  _ADD_CHILD = 0x5,
  _ADD_CHILD_BLOCKING = 0x6,
  _ADD_MAIN = 0x7,
  _BLOCK_WHILE_EXISTS = 0x8,
  _DELETE_EACH = 0x9,
  _BREAK_EACH = 0xA,
  _LABEL = 0xB,
  _GOTO = 0xC,
  _JUMP = 0xD,
  _SLEEP = 0xE,
  _MARK = 0xF,
  _BLOCK = 0x10,
  _DELETE_IF_DUPLICATE = 0x11,
  _SET_BIT4 = 0x12,
  _13 = 0x13,
  _BLOCK_WHILE = 0x14,
  _15 = 0x15,
  _CALLR_AND_MAYBE_YIELD = 0x16,
  _DELETE_EACH_DUPLICATE = 0x17,
  _CALLR_ARG = 0x18,
  _19 = 0x19,
};

/* 24 */
#pragma pack(push, 1)
struct SomeInternal6CBBStruct
{
  int SomeVRAMPointer;
  int field_4;
  int SomeRoutinePointer;
  int SomeRoutinePointer2;
  __int16 field_10;
  __int16 field_12;
  __int16 field_14;
  char field_16;
};
#pragma pack(pop)

/* 25 */
#pragma pack(push, 1)
struct TextStruct
{
  __int16 VRAMTileIndexOffset;
  char xCursor;
  char textColorIndex;
  char tileWidth;
  char useDoubleBuffer;
  char currentBufferId;
  char field_7;
};
#pragma pack(pop)

/* 23 */
#pragma pack(push, 1)
struct State6CBB
{
  Header6C header;
  char gap_29[3];
  int TextBufferPtr;
  SomeInternal6CBBStruct field_30;
  char field_47;
  TextStruct field_48;
  int field_50;
  int field_54;
  int field_58;
  __int16 field_5C;
  __int16 field_5E;
  int field_60;
  int field_64;
  int field_68;
};
#pragma pack(pop)

/* 26 */
#pragma pack(push, 1)
struct EventEngine6C
{
  Header6C header;
  char gap_29[3];
  int pActiveIdleRoutine;
  int EvPtr;
  int EvPtr2;
  int pCurrentEvents;
  __int16 state;
  __int16 stallTimer;
  char field_40;
  char field_41;
  char field_42;
  char field_43;
  __int16 field_44;
  __int16 field_46;
  int pUNIT;
  __int16 unitCount;
  char field_4E;
  char loadParameter;
  int field_50;
  int field_54;
  int field_58;
  int field_5C;
  int field_60;
  int field_64;
  int field_68;
};
#pragma pack(pop)

/* 27 */
#pragma pack(push, 1)
struct MenuCommandStruct
{
  int u0;
  __int16 nameId;
  __int16 descId;
  char color;
  char u9;
  __int16 uA;
  int usabilityRoutine;
  int u10;
  int effectRoutine;
  int u18;
  int hoverRoutine;
  int changeRoutine;
};
#pragma pack(pop)

/* 28 */
#pragma pack(push, 1)
struct AIStruct
{
  __int16 flags;
  __int16 xPos;
  __int16 yPos;
  __int16 delayCountdown;
  __int16 OAM2Base;
  __int16 drawDepth;
  __int16 field_C;
  __int16 field_E;
  __int16 field_10;
  char field_12;
  char frameIndex;
  char currentCommandCount;
  char commandIndex;
  char gap_16[2];
  int field_18;
  int OAM01Base;
  int framePtrCurrent;
  int framePtrStart;
  int pSheetData;
  int pSheetBuffer;
  int pOAMDataStart;
  int Previous;
  int Next;
  int pOAMData;
  int field_40;
  int field_44;
};
#pragma pack(pop)

/* 29 */
#pragma pack(push, 1)
struct OAMInterBufferStruct
{
  int PreviousOrNext;
  __int16 xCoord;
  __int16 yCoord;
  __int16 OAM2Data;
  char gap_A[2];
  int pOAMData;
};
#pragma pack(pop)

/* 30 */
#pragma pack(push, 1)
struct KeyBuffer
{
  char field_0;
  char ContinueFrameCount;
  char Downcounter;
  char field_3;
  __int16 Current;
  __int16 TickPresses;
  __int16 NewPresses;
  __int16 Previous;
  __int16 LastPressState;
  __int16 ABLRReleases;
  __int16 AnotherPress;
  __int16 TimeSinceLastPress;
};
#pragma pack(pop)

/* 31 */
#pragma pack(push, 1)
struct MovementFillStruct
{
  int posStructPtr;
  int fillStatePtr;
  char hasUnitBool;
  char movement;
  char unitIndex;
  char maxMovValue;
};
#pragma pack(pop)

/* 32 */
#pragma pack(push, 1)
struct RTextStruct
{
  int UpRText;
  int DownRText;
  int LeftRText;
  int RightRText;
  char xPos;
  char yPos;
  __int16 textId;
  int LooperRoutine;
  int TextGetter;
};
#pragma pack(pop)

/* 33 */
enum SpellAssocFacing
{
  SAF_Target = 0x0,
  SAF_Up = 0x1,
  SAF_Right = 0x2,
  SAF_Standing = 0x3,
};

/* 35 */
#pragma pack(push, 1)
struct BattleAnimStruct
{
  int pUnit;
  int pBattleUnit;
  int pMOVEUNIT;
  char maxHP;
  char prevHP;
  char field_E;
  char field_F;
  char field_10;
  char field_11;
  char field_12;
  char field_13;
};
#pragma pack(pop)

/* 36 */
#pragma pack(push, 1)
struct UnitEventStruct
{
  char charId;
  char classId;
  char leadId;
  char levelAllAuto;
  __int16 position_flags;
  char u6;
  char redaCount;
  int pREDA;
  char item1;
  char item2;
  char item3;
  char item4;
  char ai1;
  char ai2;
  char ai3;
  char ai4;
};
#pragma pack(pop)

/* 37 */
#pragma pack(push, 1)
struct TCS
{
  int ROMTCS;
  int FrameDataPointer;
  int AnimDataStart;
  int AnimDataCursor;
  int OAMDataPointer;
  int RotScalePointer;
  __int16 cycleTimer;
  __int16 cycleTimeStep;
  __int16 CurrentSubCycleTime;
  __int16 OAMIndex;
  char GfxUpdateNeeded;
  char RotScaleIndex;
  __int16 OAM2Data;
  int GfxPointer;
};
#pragma pack(pop)

/* 38 */
#pragma pack(push, 1)
struct GmapUnit6C
{
  Header6C header;
  char gap_29[1];
  __int16 field_2A;
  __int16 someOAMIndex;
  __int16 field_2E;
  int field_30;
  char index;
  char field_35;
  char field_36;
  char field_37;
  __int16 classId;
  __int16 classId2;
  __int16 field_3C;
  __int16 field_3E;
  int pMMSTCS;
  int field_44;
  int field_48;
  int field_4C;
  int field_50;
  int field_54;
  int field_58;
  int field_5C;
  int field_60;
  int field_64;
  int field_68;
};
#pragma pack(pop)

/* 53 */
#pragma pack(push, 1)
struct BattleAnimUnitStruct
{
  int pUnit;
  int field_4;
  int pMOVEUNIT;
  char field_C;
  char field_D;
  char field_E;
  char field_F;
  char field_10;
  char field_11;
  char field_12;
  char field_13;
};
#pragma pack(pop)

/* 39 */
#pragma pack(push, 1)
struct MapAnimMasterStruct
{
  BattleAnimUnitStruct BAS[4];
  int pCurrentRound;
  int p6CItemMapAnim;
  char subjectBASIndex;
  char targetBASIndex;
  __int16 currentRoundLoBits;
  char field_5C;
  char field_5D;
  char spellAssocCharCount;
  char someBoolOrTimer;
  char someX;
  char someY;
  char field_62;
};
#pragma pack(pop)

/* 40 */
#pragma pack(push, 1)
struct MOVEUNIT6C
{
  Header6C header;
  char gap_29[3];
  int unit;
  int tcs;
  int extraDataPointer;
  int vramPtr;
  char sprFrameId;
  char gap_3D[1];
  char cameraFollow;
  char state;
  char field_40;
  char classId;
  char field_42;
  char field_43;
  char field_44;
  char field_45;
  __int16 OAMPriorityMask;
  __int16 field_48;
  __int16 field_4A;
  __int16 xSub;
  __int16 ySub;
  __int16 field_50;
  __int16 field_52;
  int pBlendTimer6C;
};
#pragma pack(pop)

/* 41 */
#pragma pack(push, 1)
struct Vector2H
{
  __int16 x;
  __int16 y;
};
#pragma pack(pop)

/* 42 */
#pragma pack(push, 1)
struct BWLEntry
{
  int field_0;
  int field_4;
  int field_8;
  int field_C;
};
#pragma pack(pop)

/* 43 */
#pragma pack(push, 1)
struct PromotionInit6C
{
  Header6C header;
  char field_29;
  char field_2A;
  char field_2B;
  int ccramifyParent;
  char StateIndex;
  char PromStateIndex;
  char u32;
  char charId;
  char u34;
  char u35;
  char field_36;
  char field_37;
  int unitStruct;
  int promotionItemSlot;
  char field_40;
  char field_41;
  char field_42;
  char field_43;
  char field_44;
  char field_45;
  char field_46;
  char field_47;
  char field_48;
  char field_49;
  char field_4A;
  char field_4B;
  char field_4C;
  char field_4D;
  char field_4E;
  char field_4F;
  char field_50;
  char field_51;
  char field_52;
  char field_53;
  char field_54;
  char field_55;
  char field_56;
  char field_57;
  char field_58;
  char field_59;
  char field_5A;
  char field_5B;
  char field_5C;
  char field_5D;
  char field_5E;
  char field_5F;
  char field_60;
  char field_61;
  char field_62;
  char field_63;
  char field_64;
  char field_65;
  char field_66;
  char field_67;
  char field_68;
  char field_69;
  char field_6A;
  char field_6B;
};
#pragma pack(pop)

/* 44 */
#pragma pack(push, 1)
struct PromotionMain6C
{
  Header6C header;
  char field_29;
  char field_2A;
  char field_2B;
  char field_2C;
  char field_2D;
  char field_2E;
  char field_2F;
  int u30;
  int pPromotionSub6C;
  char charId;
  char modeId;
  char field_3A;
  char field_3B;
  char field_3C;
  char field_3D;
  char field_3E;
  char field_3F;
  char field_40;
  char field_41;
  char field_42;
  char field_43;
  char field_44;
  char field_45;
  char field_46;
  char field_47;
  char field_48;
  char field_49;
  char field_4A;
  char field_4B;
  char field_4C;
  char field_4D;
  char field_4E;
  char field_4F;
  char field_50;
  char field_51;
  char field_52;
  char field_53;
  char field_54;
  char field_55;
  char field_56;
  char field_57;
  char field_58;
  char field_59;
  char field_5A;
  char field_5B;
  char field_5C;
  char field_5D;
  char field_5E;
  char field_5F;
  char field_60;
  char field_61;
  char field_62;
  char field_63;
  char field_64;
  char field_65;
  char field_66;
  char field_67;
  char field_68;
  char field_69;
  char field_6A;
  char field_6B;
};
#pragma pack(pop)

/* 45 */
#pragma pack(push, 1)
struct PromotionSub6C
{
  Header6C header;
  char field_29;
  char field_2A;
  char field_2B;
  __int16 u2C;
  __int16 u2E;
  __int16 u30;
  __int16 u32;
  __int16 u34;
  __int16 u36;
  __int16 u38;
  char field_3A;
  char field_3B;
  char classDescId;
  char field_3D;
  char field_3E;
  char field_3F;
  char u40;
  char u41;
  __int16 u42;
  char field_44;
  char field_45;
  char field_46;
  char field_47;
  char u48;
  char field_49;
  char u4A;
  char field_4B;
  char u4C;
  char field_4D;
  char field_4E;
  char field_4F;
  int u50;
  char pMenuSelect6C;
  char field_55;
  char field_56;
  char field_57;
  char field_58;
  char field_59;
  char field_5A;
  char field_5B;
  char field_5C;
  char field_5D;
  char field_5E;
  char field_5F;
  char field_60;
  char field_61;
  char field_62;
  char field_63;
  char field_64;
  char field_65;
  char field_66;
  char field_67;
  char field_68;
  char field_69;
  char field_6A;
  char field_6B;
};
#pragma pack(pop)

/* 46 */
#pragma pack(push, 1)
struct TileBufferEntry
{
  int source;
  int destination;
  __int16 size;
  __int16 field_A;
};
#pragma pack(pop)

/* 47 */
#pragma pack(push, 1)
struct IconInfoStruct
{
  char useCount;
  char gfxIndex;
  char field_2;
  char field_3;
};
#pragma pack(pop)

/* 48 */
#pragma pack(push, 1)
struct FontStruct
{
  int pVRAMRootPointer;
  int pCharGlyphs;
  int pDrawGlyphRoutine;
  int pVRAMPtrGetterMaybe;
  __int16 VRAMTileValueBase;
  __int16 nextTileIndex;
  __int16 paletteId;
  char field_16;
  char field_17;
};
#pragma pack(pop)

/* 49 */
#pragma pack(push, 1)
struct TextGlyphHeader
{
  int nextGlyphMaybe;
  char glyphCharMaybe;
  char glyphWidth;
};
#pragma pack(pop)

/* 50 */
#pragma pack(push, 1)
struct MOVEUNITExtraData
{
  char index;
  char paletteIndex;
  __int16 objTileIndex;
  char currentCommandIndex;
  char moveCommands[63];
  int field_44;
  int MOVEUNIT;
};
#pragma pack(pop)

/* 51 */
#pragma pack(push, 1)
struct DebugTextStruct
{
  int u00;
  __int16 bgId;
  __int16 baseTileIndex;
  int cursorColumn;
  int cursorLine;
  int startingLine;
  char data[8192];
};
#pragma pack(pop)

/* 52 */
#pragma pack(push, 1)
struct EventEngineCallEntryStruct
{
  int pEvents;
  char fadeParam;
  char one;
  __int16 u;
};
#pragma pack(pop)

/* 54 */
union __attribute__((aligned(8))) __n64
{
  unsigned __int64 n64_u64[1];
  unsigned __int32 n64_u32[2];
  unsigned __int16 n64_u16[4];
  unsigned __int8 n64_u8[8];
  __int64 n64_i64[1];
  __int32 n64_i32[2];
  __int16 n64_i16[4];
  __int8 n64_i8[8];
  float n64_f32[2];
  double n64_f64[1];
};

/* 55 */
union __attribute__((aligned(8))) __n128
{
  unsigned __int64 n128_u64[2];
  unsigned __int32 n128_u32[4];
  unsigned __int16 n128_u16[8];
  unsigned __int8 n128_u8[16];
  __int64 n128_i64[2];
  __int32 n128_i32[4];
  __int16 n128_i16[8];
  __int8 n128_i8[16];
  float n128_f32[4];
  double n128_f64[2];
};

/* 56 */
typedef __n64 int8x8_t;

/* 57 */
typedef __n64 uint8x8_t;

/* 58 */
typedef __n64 int16x4_t;

/* 59 */
typedef __n64 int32x2_t;

/* 60 */
typedef __n64 uint16x4_t;

/* 61 */
typedef __n64 uint32x2_t;

/* 62 */
typedef __n128 int8x16_t;

/* 63 */
typedef __n128 int16x8_t;

/* 64 */
typedef __n128 int32x4_t;

/* 65 */
typedef __n128 int64x2_t;

/* 66 */
typedef __n128 uint8x16_t;

/* 67 */
typedef __n128 uint16x8_t;

/* 68 */
typedef __n128 uint32x4_t;

/* 69 */
typedef __n128 uint64x2_t;

/* 70 */
typedef __n64 poly8x8_t;

/* 71 */
typedef __n64 poly16x4_t;

/* 72 */
typedef __n128 poly16x8_t;

/* 73 */
typedef __n128 poly8x16_t;

/* 74 */
typedef __n64 float32x2_t;

/* 75 */
typedef __n128 float32x4_t;

/* 76 */
typedef __n128 float64x2_t;

/* 77 */
typedef __n128 poly128_t;

/* 78 */
typedef void **va_list;

/* 79 */
#pragma pack(push, 1)
struct ActionData
{
  __int16 currentRN;
  __int16 currentRN2;
  __int16 currentRN3;
  __int16 pushedRN;
  __int16 pushedRN2;
  __int16 pushedRN3;
  char unitIndex;
  char targetIndex;
  char xMove;
  char yMove;
  char moveCount;
  char actionId;
  char itemSlotIndex;
  char xPos2;
  char yPos2;
  char someTrapType;
  char postSuspendAction;
  char field_17;
  int SomeBattleRound;
  int field_1C;
  int field_20;
  int field_24;
  char field_28;
  char field_29;
  char field_2A;
  char field_2B;
  char field_2C;
  char field_2D;
  char field_2E;
  char field_2F;
  char field_30;
  char field_31;
  char field_32;
  char field_33;
  char field_34;
  char field_35;
  char field_36;
  char field_37;
};
#pragma pack(pop)

/* 80 */
#pragma pack(push, 1)
struct TileRegisterEntry
{
  int source;
  int destination;
  __int16 size;
  __int16 field_A;
};
#pragma pack(pop)

/* 81 */
#pragma pack(push, 1)
struct DebugTextData
{
  int u00;
  __int16 bgId;
  __int16 baseTileIndex;
  int cursorColumn;
  int cursorLine;
  int startingLine;
  char data[8192];
};
#pragma pack(pop)

/* 82 */
#pragma pack(push, 1)
struct ChapterData
{
  int savedGlobalTimer;
  int startGlobalTimer;
  int goldAmount;
  char saveSlot;
  char visionRange;
  char chapterId;
  char phase;
  __int16 turnNumber;
  char curX;
  char curY;
  char chapterState;
  char weather;
  __int16 supportGainCount;
  char playthroughId;
  char u19;
  char lastUnitListSortId;
  char mode;
  char weaponTypeIndexedCharacterIdsSpecifyingIfUnusableWeaponsAreUsable[4];
  char sTacticianName[11];
  char bit1RelatedToBonusItems;
  char field_2C;
  char field_2D;
  char field_2E;
  char field_2F;
  int fundsTotalDifference;
  int field_34;
  char field_38;
  char field_39;
  char field_3A;
  char field_3B;
  char field_3C;
  char field_3D;
  char tacticsRank;
  char field_3F;
  char option1;
  char option2;
  char option3;
  char option4;
  char field_44;
  char field_45;
  char field_46;
  char field_47;
  __int16 field_48;
  char nextTutorialEventParams;
  char nextTutorialEvent;
};
#pragma pack(pop)

/* 83 */
#pragma pack(push, 1)
struct WMLocationData
{
  char flags1;
  char flags2;
  __int16 mapIcon;
  char chId_Eirika;
  char chId_Ephraim;
  __int16 altEvId;
  char nextLocUnset_Eirika;
  char nextLocUnset_Ephraim;
  char nextLocSet_Eirika;
  char nextLocSet_Ephraim;
  int pArmory;
  int pShop;
  int pSecretShop;
  __int16 xCoord;
  __int16 yCoord;
  __int16 text;
  __int16 shipTravel;
};
#pragma pack(pop)

/* 84 */
#pragma pack(push, 1)
struct ArenaData
{
  int playerUnitPtr;
  int opponentUnitPtr;
  char field_8;
  char field_9;
  char field_A;
  char field_B;
  char range;
  char playerWType;
  char opponentWType;
  char playerClass;
  char opponentClass;
  char playerLevel;
  char opponentLevel;
  char playerMagicDamage;
  char opponentMagicDamage;
  char pad15;
  __int16 playerPowWeight;
  __int16 opponentPowWeight;
  __int16 playerWeapon;
  __int16 opponentWeapon;
  __int16 field_1E;
};
#pragma pack(pop)

/* 85 */
#pragma pack(push, 1)
struct __attribute__((packed)) __attribute__((aligned(1))) ProcState
{
  int EntryPoint;
  int NextCall;
  int Destructor;
  int Callback;
  int NamePtr;
  int pParent;
  int child;
  int prev;
  int next;
  __int16 SleepTimer;
  char Mark;
  char SomeBitfieldMaybe;
  char ExecBlockCounter;
};
#pragma pack(pop)

/* 86 */
#pragma pack(push, 4)
struct BottomHelpProc
{
  ProcState header;
  int pString;
  SomeInternal6CBBStruct field_30;
  char field_47;
  TextStruct field_48;
  int field_50;
  int field_54;
  int field_58;
  __int16 field_5C;
  __int16 field_5E;
  int field_60;
  int field_64;
  int field_68;
};
#pragma pack(pop)

/* 87 */
#pragma pack(push, 4)
struct EventEngineProc
{
  ProcState header;
  int pActiveIdleRoutine;
  int EvPtr;
  int EvPtr2;
  int pCurrentEvents;
  __int16 state;
  __int16 stallTimer;
  char field_40;
  char field_41;
  char activeTextType;
  char chInd;
  __int16 field_44;
  __int16 field_46;
  int pUNIT;
  __int16 unitCount;
  char field_4E;
  char loadParameter;
  int field_50;
  int field_54;
  int field_58;
  int field_5C;
  int field_60;
  int field_64;
  int field_68;
};
#pragma pack(pop)

/* 88 */
#pragma pack(push, 1)
struct AP
{
  int ROMTCS;
  int FrameDataPointer;
  int AnimDataStart;
  int AnimDataCursor;
  int OAMDataPointer;
  int RotScalePointer;
  __int16 cycleTimer;
  __int16 cycleTimeStep;
  __int16 CurrentSubCycleTime;
  __int16 OAMIndex;
  char GfxUpdateNeeded;
  char RotScaleIndex;
  __int16 OAM2Data;
  int GfxPointer;
};
#pragma pack(pop)

/* 89 */
#pragma pack(push, 1)
struct PromotionInitProc
{
  ProcState header;
  char field_29;
  char field_2A;
  char field_2B;
  int ccramifyParent;
  char StateIndex;
  char promStateIndex;
  char u32;
  char charId;
  char u34;
  char u35;
  char field_36;
  char field_37;
  int unit;
  int promotionItemSlot;
  char field_40;
  char field_41;
  char field_42;
  char field_43;
  char field_44;
  char field_45;
  char field_46;
  char field_47;
  char field_48;
  char field_49;
  char field_4A;
  char field_4B;
  char field_4C;
  char field_4D;
  char field_4E;
  char field_4F;
  char field_50;
  char field_51;
  char field_52;
  char field_53;
  char field_54;
  char field_55;
  char field_56;
  char field_57;
  char field_58;
  char field_59;
  char field_5A;
  char field_5B;
  char field_5C;
  char field_5D;
  char field_5E;
  char field_5F;
  char field_60;
  char field_61;
  char field_62;
  char field_63;
  char field_64;
  char field_65;
  char field_66;
  char field_67;
  char field_68;
  char field_69;
  char field_6A;
  char field_6B;
};
#pragma pack(pop)

/* 90 */
#pragma pack(push, 1)
struct PromotionMainProc
{
  ProcState header;
  char field_29;
  char field_2A;
  char field_2B;
  char field_2C;
  char field_2D;
  char field_2E;
  char field_2F;
  int u30;
  int pPromotionSub6C;
  char charId;
  char modeId;
  char field_3A;
  char field_3B;
  char field_3C;
  char field_3D;
  char field_3E;
  char field_3F;
  char field_40;
  char field_41;
  char field_42;
  char field_43;
  char field_44;
  char field_45;
  char field_46;
  char field_47;
  char field_48;
  char field_49;
  char field_4A;
  char field_4B;
  char field_4C;
  char field_4D;
  char field_4E;
  char field_4F;
  char field_50;
  char field_51;
  char field_52;
  char field_53;
  char field_54;
  char field_55;
  char field_56;
  char field_57;
  char field_58;
  char field_59;
  char field_5A;
  char field_5B;
  char field_5C;
  char field_5D;
  char field_5E;
  char field_5F;
  char field_60;
  char field_61;
  char field_62;
  char field_63;
  char field_64;
  char field_65;
  char field_66;
  char field_67;
  char field_68;
  char field_69;
  char field_6A;
  char field_6B;
};
#pragma pack(pop)

/* 91 */
#pragma pack(push, 1)
struct PromotionDisplayProc
{
  ProcState header;
  char field_29;
  char field_2A;
  char field_2B;
  __int16 promotedClassIds[3];
  __int16 promotedClassAnimIds[3];
  __int16 promotedClassDescIds[3];
  char field_3E;
  char field_3F;
  char u40;
  char selectedOptionIndex;
  __int16 u42;
  char field_44;
  char field_45;
  char field_46;
  char field_47;
  __int16 displayedWeapon;
  char promotedClassHasAnim[3];
  char field_4D;
  char field_4E;
  char field_4F;
  int u50;
  char pMenuSelectProc;
  char field_55;
  char field_56;
  char field_57;
  char field_58;
  char field_59;
  char field_5A;
  char field_5B;
  char field_5C;
  char field_5D;
  char field_5E;
  char field_5F;
  char field_60;
  char field_61;
  char field_62;
  char field_63;
  char field_64;
  char field_65;
  char field_66;
  char field_67;
  char field_68;
  char field_69;
  char field_6A;
  char field_6B;
};
#pragma pack(pop)

/* 98 */
#pragma pack(push, 1)
struct AiDecision
{
  char actionType;
  char unitIndex;
  char xPos;
  char yPos;
  char field_4;
  char field_5;
  char targetIndex;
  char itemIndex;
  char xPos2;
  char yPos2;
  char actionPerformedBool;
};
#pragma pack(pop)

/* 92 */
#pragma pack(push, 1)
struct __attribute__((packed)) __attribute__((aligned(1))) AIData
{
  char unitIndexList[52];
  char anonymous_51;
  char anonymous_52;
  char anonymous_53;
  char anonymous_54;
  char anonymous_55;
  char anonymous_56;
  char anonymous_57;
  char anonymous_58;
  char anonymous_59;
  char anonymous_60;
  char anonymous_61;
  char anonymous_62;
  char anonymous_63;
  char anonymous_64;
  char anonymous_65;
  char anonymous_66;
  char anonymous_67;
  char anonymous_68;
  char anonymous_69;
  char anonymous_70;
  char anonymous_71;
  char anonymous_72;
  char anonymous_73;
  char anonymous_74;
  char anonymous_75;
  char anonymous_76;
  char anonymous_77;
  char anonymous_78;
  char anonymous_79;
  char anonymous_80;
  char anonymous_81;
  char anonymous_82;
  char anonymous_83;
  char anonymous_84;
  char anonymous_85;
  char anonymous_86;
  char anonymous_87;
  char anonymous_88;
  char anonymous_89;
  char anonymous_90;
  char anonymous_91;
  char anonymous_92;
  char anonymous_93;
  char anonymous_94;
  char anonymous_95;
  char anonymous_96;
  char anonymous_97;
  char anonymous_98;
  char anonymous_99;
  char anonymous_100;
  char anonymous_101;
  char anonymous_102;
  char anonymous_103;
  char anonymous_104;
  char anonymous_105;
  char anonymous_106;
  char anonymous_107;
  char anonymous_108;
  char anonymous_109;
  char anonymous_110;
  char anonymous_111;
  char anonymous_112;
  char anonymous_113;
  char anonymous_114;
  int gUnitIndexIt;
  char nextOrder;
  char decideIndex;
  char dangerMapFilled;
  char aiConfigBits;
  char field_7C;
  char anonymous_120;
  char anonymous_121;
  char anonymous_122;
  int specialItemsConfig;
  char anonymous_124;
  char bestBlueMovement;
  char scrInstructionResult;
  char anonymous_127;
  char anonymous_128;
  char anonymous_129;
  char anonymous_130;
  char anonymous_131;
  _BYTE gap8C[1];
  char anonymous_132;
  char anonymous_133[2];
  AiDecision decision;
};
#pragma pack(pop)

/* 93 */
#pragma pack(push, 1)
struct MenuRelatedEntry
{
  __int16 field_0;
  __int16 anonymous_0;
  int usability;
};
#pragma pack(pop)

/* 94 */
#pragma pack(push, 1)
struct LCDIOBuffer
{
  __int16 gLCDControlBuffer;
  __int16 anonymous_0;
  __int16 gGeneralLCDStatusBuffer;
  __int16 anonymous_1;
  __int16 anonymous_2;
  __int16 anonymous_3;
  __int16 gBg0ControlBuffer;
  __int16 anonymous_4;
  __int16 gBg1ControlBuffer;
  __int16 anonymous_5;
  __int16 gBg2ControlBuffer;
  __int16 anonymous_6;
  __int16 gBg3ControlBuffer;
  __int16 anonymous_7;
  Vector2H gBg0PositionBuffer;
  Vector2H gBg1PositionBuffer;
  Vector2H gBg2PositionBuffer;
  Vector2H gBg3PositionBuffer;
  int gWindowHDimBuffer;
  int gWindowVDimBuffer;
  int gWindowControlBuffer;
  __int16 gMosaicSizeBuffer;
  __int16 anonymous_8;
  int gColorSpecialEffectsSelectionBuffer;
  int anonymous_9;
  __int16 gAlphaBlendingCoefficientsBuffer;
  __int16 gBrightnessCoefficientBuffer;
  int gBg2RotationScalingParameterBuffer;
  int gBg2RotationScalingParameterBuffer2;
  int gBg2ReferencePointXBuffer;
  int gBg2ReferencePointYBuffer;
  int gBg3RotationScalingParameterBuffer;
  int gBg3RotationScalingParameterBuffer2;
  int gBg3ReferencePointXBuffer;
  int gBg3ReferencePointYBuffer;
  char anonymous_10;
  char anonymous_11[7];
};
#pragma pack(pop)

/* 95 */
#pragma pack(push, 1)
struct __attribute__((packed)) __attribute__((aligned(2))) FaceProc
{
  ProcState header;
  char field_29;
  char field_2A;
  char field_2B;
  int pPortraitData;
  int displayBits;
  __int16 xPosition;
  __int16 yPosition;
  int pObjData;
  __int16 tileData;
  __int16 portraitIndex;
  char faceSlotIndex;
  char objDepth;
  __int16 field_42;
  int field_44;
  int pProcEyeWinker;
  __int16 field_4C;
};
#pragma pack(pop)

/* 96 */
#pragma pack(push, 1)
struct EventDefinitionBuffer
{
  int pEventDeclaration;
  int pEvent;
  int triggerIndex;
  int command;
  int field_10;
  int field_14;
  char field_18;
  char field_19;
  char char1;
  char char2;
};
#pragma pack(pop)

/* 97 */
#pragma pack(push, 1)
struct ActiveEventRegistry
{
  int events[10];
  __int16 triggerIndices[10];
  __int16 size;
  char _pad3E[2];
};
#pragma pack(pop)

/* 99 */
#pragma pack(push, 4)
struct AiAttackInfo
{
  char xPos;
  char yPos;
  char uIndex;
  __int16 item;
  int decisionTotalWeight;
};
#pragma pack(pop)

/* 100 */
#pragma pack(push, 1)
struct __attribute__((packed)) __attribute__((aligned(1))) SoundStatus
{
  __int16 field_0;
  __int16 overwrittenSongId;
  __int16 songId;
  char songPlaying;
  char field_7;
  char maxChannels;
};
#pragma pack(pop)

/* 101 */
#pragma pack(push, 4)
struct MusicPlayerInfo
{
  int songHeader;
  int status;
  char trackCount;
  char priority;
  char cmd;
  int clock;
  _BYTE gap10[8];
  int memAccArea;
  __int16 tempoD;
  __int16 tempoU;
  __int16 tempoI;
  __int16 tempoC;
  __int16 fadeOI;
  __int16 fadeOC;
  __int16 fadeOV;
  int tracks;
  int tone;
  int ident;
  int func;
  int intp;
};
#pragma pack(pop)

/* 102 */
#pragma pack(push, 2)
struct MusicPlayer
{
  void *info;
  void *track;
  char field_8;
  __int16 field_A;
};
#pragma pack(pop)

/* 103 */
#pragma pack(push, 1)
struct struct_0
{
  int anonymous_0;
  int anonymous_1;
  int anonymous_2;
  int anonymous_3;
};
#pragma pack(pop)

/* 104 */
#pragma pack(push, 1)
struct GameState
{
  char mainLoopEndedFlag;
  char gameLogicLockCount;
  char gameGfxLockCount;
  char anonymous_0;
  char statebits;
  char anonymous_1;
  __int16 savedVCLY;
  int anonymous_2;
  Vector2H cameraRealPos;
  int anonymous_3;
  Vector2H cursorMapPos;
  Vector2H cursorMapPosPrevious;
  Vector2H someCursorRealPos;
  Vector2H cursorDisplayRealPos;
  Vector2H gSomeRealCameraOffset;
  Vector2H gSomeRealCameraOffsetTarget;
  __int16 gItemGotButNotYet;
  __int16 gThatsAnItem2;
  _BYTE gap30[2];
  __int16 anonymous_5;
  __int16 anonymous_6;
  char anonymous_7;
  char anonymous_8;
  char anonymous_9;
  char anonymous_10;
  char anonymous_11;
  char anonymous_12;
  char anonymous_13;
  char partialActionsTakenBits;
  char anonymous_15;
  char anonymous_16;
};
#pragma pack(pop)

/* 105 */
#pragma pack(push, 1)
struct BattleAnimRoundTypeDisplayEntry
{
  char frontFrameId;
  char frontDrawPriority;
  char backFrameId;
  char backFramePriority;
};
#pragma pack(pop)

/* 106 */
#pragma pack(push, 1)
struct proc
{
  unsigned __int16 code;
  unsigned __int16 sarg;
  unsigned __int32 larg;
};
#pragma pack(pop)

/* 107 */
enum UnitState
{
  US_HIDDEN = 0x1,
  US_GRAYED = 0x2,
  US_DEAD = 0x4,
  US_NOT_DEPLYOED = 0x8,
  US_RESCUING = 0x10,
  US_RESCUED = 0x20,
  US_CANTOING = 0x40,
  US_UNDER_A_ROOF = 0x80,
};

/* 108 */
#pragma pack(push, 1)
struct ROMCharEntry
{
  __int16 nameId;
  __int16 descId;
  char number;
  char class;
  __int16 portraitId;
  char miniPortrait;
  char affinity;
  char u0A;
  char baseLevel;
  char baseHP;
  char basePow;
  char baseSkl;
  char baseSpd;
  char baseDef;
  char baseRes;
  char baseLck;
  char baseCon;
  char rank1;
  char rank2;
  char rank3;
  char rank4;
  char rank5;
  char rank6;
  char rank7;
  char rank8;
  char growthHP;
  char growthPow;
  char growthSkl;
  char growthSpd;
  char growthDef;
  char growthRes;
  char growthLck;
  char u23;
  char u24;
  char u25;
  char u26;
  char u27;
  int attributes;
  int supportDataPtr;
  int uPtr30;
};
#pragma pack(pop)

/* 109 */
#pragma pack(push, 1)
struct BattleAnimActorStruct
{
  int pBattleUnit;
  int pBattleUnit2;
  int pMu;
  char hpMax;
  char hpDisplayed;
  __int16 field_E;
  char field_10;
  char field_11;
  char field_12;
  char field_13;
};
#pragma pack(pop)

/* 110 */
#pragma pack(push, 1)
struct __attribute__((packed)) __attribute__((aligned(1))) MapAnimDataStruct
{
  BattleAnimActorStruct BAS[4];
  int pNextRound;
  int pItemAnimProcScript;
  char attackingActorId;
  char defendingActorId;
  __int16 currentRoundLoBits;
  char field_5C;
  char field_5D;
  char spellAssocActorCount;
  char someBoolOrTimer;
  char someX;
  char someY;
  char field_62;
};
#pragma pack(pop)

/* 111 */
#pragma pack(push, 4)
struct MUProc
{
  ProcState header;
  int unit;
  int ap;
  int extraDataPointer;
  int vramPtr;
  char sprFrameId;
  __attribute__((aligned(2))) char cameraFollow;
  char state;
  char field_40;
  char classId;
  char field_42;
  char field_43;
  char field_44;
  char field_45;
  __int16 OAMPriorityMask;
  __int16 field_48;
  __int16 field_4A;
  __int16 xPosition;
  __int16 yPosition;
  __int16 xOffset;
  __int16 yOffset;
  int pBlendTimer6C;
};
#pragma pack(pop)

/* 112 */
#pragma pack(push, 1)
struct PrepScreenUnitList
{
  int units[64];
  int size;
};
#pragma pack(pop)

